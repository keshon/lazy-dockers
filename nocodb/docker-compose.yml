version: "3.7"

services:
    watchtower:
        image: containrrr/watchtower
        container_name: ${ALIAS}-watchtower
        restart: always
        networks:
            - proxy    
        command: --schedule "0 5 * * *" --cleanup --label-enable
        
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - "com.centurylinklabs.watchtower.enable=true"

    nocodb:
        container_name: ${ALIAS}-nocodb
        image: nocodb/nocodb:latest
        restart: always
        networks:
          - proxy
        environment:
          - NC_DB=pg://nocodb-db:5432?u=${DATABASE_USER}&p=${DATABASE_PW}&d=${DATABASE_NAME}          
          - NC_PUBLIC_URL=https://${DOMAINNAME}
          - NC_DISABLE_TELE=true
          - DB_QUERY_LIMIT_MIN=500
          - DB_QUERY_LIMIT_MAX=500
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.nocodb.loadbalancer.server.port=8080"
            - "traefik.http.routers.nocodb.rule=Host(`${DOMAINNAME}`)"
            - "traefik.http.routers.nocodb.entrypoints=https" 
            - "traefik.http.routers.nocodb.tls=true"
            - "traefik.http.routers.nocodb.tls.certresolver=letsencrypt"            
            - "com.centurylinklabs.watchtower.enable=true"
        depends_on:
          - nocodb-db

    postgres:
        image: postgres:12.1-alpine
        container_name: ${ALIAS}-postgres
        restart: always
        networks:
            - proxy
        environment:
           POSTGRES_USER: ${DATABASE_USER}
           POSTGRES_PASSWORD: ${DATABASE_PW}
           POSTGRES_DB: ${DATABASE_NAME}
        volumes:
          - ./nocodb-db:/var/lib/postgresql/data
        healthcheck:
          test: pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}
          interval: 10s
          timeout: 2s
          retries: 10

networks:
  proxy:
    external: true
