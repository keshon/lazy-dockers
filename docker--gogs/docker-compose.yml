version: "3"
services:
  db:
    image: postgres:latest
    container_name: ${ALIAS}-db    
    restart: always
    environment:
     - "POSTGRES_USER=${POSTGRES_USER}"
     - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
     - "POSTGRES_DB=gogs"
    volumes:
     - "./data/db:/var/lib/postgresql/data"
    networks:
     - private
  app:
    image: gogs/gogs:latest
    container_name: ${ALIAS}-app
    restart: always
    ports:
     - "10022:22"
     - "3000:3000"
    links:
     - db
    environment:
     - "RUN_CROND=true"
    networks:
     - private
     - proxy
    volumes:
     - "./data/app:/data"
    depends_on:
     - db
    labels:
      - traefik.http.services.my-service.loadbalancer.server.port=3000
      - traefik.http.routers.${ALIAS}.middlewares=${ALIAS}Headers
      - traefik.http.middlewares.${ALIAS}Headers.headers.browserXSSFilter=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.frameDeny=true
      #- traefik.http.middlewares.${ALIAS}Headers.headers.referrerPolicy=no-referrer
      - traefik.http.middlewares.${ALIAS}Headers.headers.customFrameOptionsValue=SAMEORIGIN
      - traefik.http.middlewares.${ALIAS}Headers.headers.SSLHost=${HOST}
      - traefik.http.middlewares.${ALIAS}Headers.headers.SSLRedirect=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.stsSeconds=15552000
      - traefik.http.middlewares.${ALIAS}Headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.stsPreload=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.forceSTSHeader=true
      - traefik.http.routers.${ALIAS}.rule=Host(`${HOST}`)
      - traefik.http.routers.${ALIAS}.tls=true
      - traefik.http.routers.${ALIAS}.tls.certresolver=letsencrypt

networks:
  proxy:
    external: true
  private:
    driver: bridge
    internal: true