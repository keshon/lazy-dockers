version: "3.4"
services:
  pwndrop:
    container_name: pwndrop
    ports:
        - '8088:8088'
        - '8443:8443'
    image: 'harshavardhanj/pwndrop:alpine'
    volumes:
        - "./data/data:/pwndrop/data"
        - "./data/pwndrop.ini:/pwndrop/pwndrop.ini"
    networks: 
      - proxy
    restart: unless-stopped
    labels:
      #- traefik.enable=true
      #- traefik.port=443
      - traefik.http.services.plik.loadbalancer.server.port=8088
      - traefik.http.routers.${ALIAS}.middlewares=${ALIAS}Headers
      - traefik.http.middlewares.${ALIAS}Headers.headers.browserXSSFilter=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.frameDeny=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.referrerPolicy=no-referrer
      - traefik.http.middlewares.${ALIAS}Headers.headers.customFrameOptionsValue=SAMEORIGIN
      - traefik.http.middlewares.${ALIAS}Headers.headers.SSLHost=${HOST}
      - traefik.http.middlewares.${ALIAS}Headers.headers.SSLRedirect=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.stsSeconds=15552000
      - traefik.http.middlewares.${ALIAS}Headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.stsPreload=true
      - traefik.http.middlewares.${ALIAS}Headers.headers.forceSTSHeader=true
      #tls
      - traefik.http.routers.${ALIAS}.rule=Host(`${HOST}`)
      - traefik.http.routers.${ALIAS}.tls=true
      - traefik.http.routers.${ALIAS}.tls.certresolver=letsencrypt

networks:
  # Change if you're using another network
  proxy:
    external: true